/*** Autogenerated by WIDL 1.6 from d3d-headers/dxgi_dwm.idl ***/
#pragma once
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

#include <rpc.h>
#include <rpcndr.h>

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __IDXGISwapChainDWM_FWD_DEFINED__
#define __IDXGISwapChainDWM_FWD_DEFINED__
typedef interface IDXGISwapChainDWM IDXGISwapChainDWM;
#endif

#ifndef __IDXGIFactoryDWM_FWD_DEFINED__
#define __IDXGIFactoryDWM_FWD_DEFINED__
typedef interface IDXGIFactoryDWM IDXGIFactoryDWM;
#endif

/* Headers for imported files */

#include <dxgi.h>

#ifdef __cplusplus
extern "C" {
#endif

	/*****************************************************************************
	* IDXGISwapChainDWM interface
	*/
#ifndef __IDXGISwapChainDWM_INTERFACE_DEFINED__
#define __IDXGISwapChainDWM_INTERFACE_DEFINED__

	DEFINE_GUID(IID_IDXGISwapChainDWM, 0xf69f223b, 0x45d3, 0x4aa0, 0x98, 0xc8, 0xc4, 0x0c, 0x2b, 0x23, 0x10, 0x29);
#if defined(__cplusplus) && !defined(CINTERFACE)
	MIDL_INTERFACE("f69f223b-45d3-4aa0-98c8-c40c2b231029")
		IDXGISwapChainDWM : public IDXGIDeviceSubObject
	{
		virtual HRESULT STDMETHODCALLTYPE Present(
			UINT SyncInterval,
			UINT Flags) = 0;

	virtual HRESULT STDMETHODCALLTYPE GetBuffer(
		UINT Buffer,
		REFIID riid,
		void **ppSurface) = 0;

	virtual HRESULT STDMETHODCALLTYPE GetDesc(
		DXGI_SWAP_CHAIN_DESC *pDesc) = 0;

	virtual HRESULT STDMETHODCALLTYPE ResizeBuffers(
		UINT BufferCount,
		UINT Width,
		UINT Height,
		DXGI_FORMAT NewFormat,
		UINT SwapChainFlags) = 0;

	virtual HRESULT STDMETHODCALLTYPE ResizeTarget(
		const DXGI_MODE_DESC *pNewTargetParameters) = 0;

	virtual HRESULT STDMETHODCALLTYPE GetContainingOutput(
		IDXGIOutput **ppOutput) = 0;

	virtual HRESULT STDMETHODCALLTYPE GetFrameStatistics(
		DXGI_FRAME_STATISTICS *pStats) = 0;

	virtual HRESULT STDMETHODCALLTYPE GetLastPresentCount(
		UINT *pLastPresentCount) = 0;

	};
#ifdef __CRT_UUID_DECL
	__CRT_UUID_DECL(IDXGISwapChainDWM, 0xf69f223b, 0x45d3, 0x4aa0, 0x98, 0xc8, 0xc4, 0x0c, 0x2b, 0x23, 0x10, 0x29)
#endif
#else
	typedef struct IDXGISwapChainDWMVtbl {
		BEGIN_INTERFACE

			/*** IUnknown methods ***/
			HRESULT(STDMETHODCALLTYPE *QueryInterface)(
				IDXGISwapChainDWM* This,
				REFIID riid,
				void **ppvObject);

		ULONG(STDMETHODCALLTYPE *AddRef)(
			IDXGISwapChainDWM* This);

		ULONG(STDMETHODCALLTYPE *Release)(
			IDXGISwapChainDWM* This);

		/*** IDXGIObject methods ***/
		HRESULT(STDMETHODCALLTYPE *SetPrivateData)(
			IDXGISwapChainDWM* This,
			REFGUID guid,
			UINT data_size,
			const void *data);

		HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface)(
			IDXGISwapChainDWM* This,
			REFGUID guid,
			const IUnknown *object);

		HRESULT(STDMETHODCALLTYPE *GetPrivateData)(
			IDXGISwapChainDWM* This,
			REFGUID guid,
			UINT *data_size,
			void *data);

		HRESULT(STDMETHODCALLTYPE *GetParent)(
			IDXGISwapChainDWM* This,
			REFIID riid,
			void **parent);

		/*** IDXGIDeviceSubObject methods ***/
		HRESULT(STDMETHODCALLTYPE *GetDevice)(
			IDXGISwapChainDWM* This,
			REFIID riid,
			void **device);

		/*** IDXGISwapChainDWM methods ***/
		HRESULT(STDMETHODCALLTYPE *Present)(
			IDXGISwapChainDWM* This,
			UINT SyncInterval,
			UINT Flags);

		HRESULT(STDMETHODCALLTYPE *GetBuffer)(
			IDXGISwapChainDWM* This,
			UINT Buffer,
			REFIID riid,
			void **ppSurface);

		HRESULT(STDMETHODCALLTYPE *GetDesc)(
			IDXGISwapChainDWM* This,
			DXGI_SWAP_CHAIN_DESC *pDesc);

		HRESULT(STDMETHODCALLTYPE *ResizeBuffers)(
			IDXGISwapChainDWM* This,
			UINT BufferCount,
			UINT Width,
			UINT Height,
			DXGI_FORMAT NewFormat,
			UINT SwapChainFlags);

		HRESULT(STDMETHODCALLTYPE *ResizeTarget)(
			IDXGISwapChainDWM* This,
			const DXGI_MODE_DESC *pNewTargetParameters);

		HRESULT(STDMETHODCALLTYPE *GetContainingOutput)(
			IDXGISwapChainDWM* This,
			IDXGIOutput **ppOutput);

		HRESULT(STDMETHODCALLTYPE *GetFrameStatistics)(
			IDXGISwapChainDWM* This,
			DXGI_FRAME_STATISTICS *pStats);

		HRESULT(STDMETHODCALLTYPE *GetLastPresentCount)(
			IDXGISwapChainDWM* This,
			UINT *pLastPresentCount);

		END_INTERFACE
	} IDXGISwapChainDWMVtbl;
	interface IDXGISwapChainDWM {
		CONST_VTBL IDXGISwapChainDWMVtbl* lpVtbl;
	};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
	/*** IUnknown methods ***/
#define IDXGISwapChainDWM_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IDXGISwapChainDWM_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IDXGISwapChainDWM_Release(This) (This)->lpVtbl->Release(This)
	/*** IDXGIObject methods ***/
#define IDXGISwapChainDWM_SetPrivateData(This,guid,data_size,data) (This)->lpVtbl->SetPrivateData(This,guid,data_size,data)
#define IDXGISwapChainDWM_SetPrivateDataInterface(This,guid,object) (This)->lpVtbl->SetPrivateDataInterface(This,guid,object)
#define IDXGISwapChainDWM_GetPrivateData(This,guid,data_size,data) (This)->lpVtbl->GetPrivateData(This,guid,data_size,data)
#define IDXGISwapChainDWM_GetParent(This,riid,parent) (This)->lpVtbl->GetParent(This,riid,parent)
	/*** IDXGIDeviceSubObject methods ***/
#define IDXGISwapChainDWM_GetDevice(This,riid,device) (This)->lpVtbl->GetDevice(This,riid,device)
	/*** IDXGISwapChainDWM methods ***/
#define IDXGISwapChainDWM_Present(This,SyncInterval,Flags) (This)->lpVtbl->Present(This,SyncInterval,Flags)
#define IDXGISwapChainDWM_GetBuffer(This,Buffer,riid,ppSurface) (This)->lpVtbl->GetBuffer(This,Buffer,riid,ppSurface)
#define IDXGISwapChainDWM_GetDesc(This,pDesc) (This)->lpVtbl->GetDesc(This,pDesc)
#define IDXGISwapChainDWM_ResizeBuffers(This,BufferCount,Width,Height,NewFormat,SwapChainFlags) (This)->lpVtbl->ResizeBuffers(This,BufferCount,Width,Height,NewFormat,SwapChainFlags)
#define IDXGISwapChainDWM_ResizeTarget(This,pNewTargetParameters) (This)->lpVtbl->ResizeTarget(This,pNewTargetParameters)
#define IDXGISwapChainDWM_GetContainingOutput(This,ppOutput) (This)->lpVtbl->GetContainingOutput(This,ppOutput)
#define IDXGISwapChainDWM_GetFrameStatistics(This,pStats) (This)->lpVtbl->GetFrameStatistics(This,pStats)
#define IDXGISwapChainDWM_GetLastPresentCount(This,pLastPresentCount) (This)->lpVtbl->GetLastPresentCount(This,pLastPresentCount)
#else
	/*** IUnknown methods ***/
	static FORCEINLINE HRESULT IDXGISwapChainDWM_QueryInterface(IDXGISwapChainDWM* This, REFIID riid, void **ppvObject) {
		return This->lpVtbl->QueryInterface(This, riid, ppvObject);
	}
	static FORCEINLINE ULONG IDXGISwapChainDWM_AddRef(IDXGISwapChainDWM* This) {
		return This->lpVtbl->AddRef(This);
	}
	static FORCEINLINE ULONG IDXGISwapChainDWM_Release(IDXGISwapChainDWM* This) {
		return This->lpVtbl->Release(This);
	}
	/*** IDXGIObject methods ***/
	static FORCEINLINE HRESULT IDXGISwapChainDWM_SetPrivateData(IDXGISwapChainDWM* This, REFGUID guid, UINT data_size, const void *data) {
		return This->lpVtbl->SetPrivateData(This, guid, data_size, data);
	}
	static FORCEINLINE HRESULT IDXGISwapChainDWM_SetPrivateDataInterface(IDXGISwapChainDWM* This, REFGUID guid, const IUnknown *object) {
		return This->lpVtbl->SetPrivateDataInterface(This, guid, object);
	}
	static FORCEINLINE HRESULT IDXGISwapChainDWM_GetPrivateData(IDXGISwapChainDWM* This, REFGUID guid, UINT *data_size, void *data) {
		return This->lpVtbl->GetPrivateData(This, guid, data_size, data);
	}
	static FORCEINLINE HRESULT IDXGISwapChainDWM_GetParent(IDXGISwapChainDWM* This, REFIID riid, void **parent) {
		return This->lpVtbl->GetParent(This, riid, parent);
	}
	/*** IDXGIDeviceSubObject methods ***/
	static FORCEINLINE HRESULT IDXGISwapChainDWM_GetDevice(IDXGISwapChainDWM* This, REFIID riid, void **device) {
		return This->lpVtbl->GetDevice(This, riid, device);
	}
	/*** IDXGISwapChainDWM methods ***/
	static FORCEINLINE HRESULT IDXGISwapChainDWM_Present(IDXGISwapChainDWM* This, UINT SyncInterval, UINT Flags) {
		return This->lpVtbl->Present(This, SyncInterval, Flags);
	}
	static FORCEINLINE HRESULT IDXGISwapChainDWM_GetBuffer(IDXGISwapChainDWM* This, UINT Buffer, REFIID riid, void **ppSurface) {
		return This->lpVtbl->GetBuffer(This, Buffer, riid, ppSurface);
	}
	static FORCEINLINE HRESULT IDXGISwapChainDWM_GetDesc(IDXGISwapChainDWM* This, DXGI_SWAP_CHAIN_DESC *pDesc) {
		return This->lpVtbl->GetDesc(This, pDesc);
	}
	static FORCEINLINE HRESULT IDXGISwapChainDWM_ResizeBuffers(IDXGISwapChainDWM* This, UINT BufferCount, UINT Width, UINT Height, DXGI_FORMAT NewFormat, UINT SwapChainFlags) {
		return This->lpVtbl->ResizeBuffers(This, BufferCount, Width, Height, NewFormat, SwapChainFlags);
	}
	static FORCEINLINE HRESULT IDXGISwapChainDWM_ResizeTarget(IDXGISwapChainDWM* This, const DXGI_MODE_DESC *pNewTargetParameters) {
		return This->lpVtbl->ResizeTarget(This, pNewTargetParameters);
	}
	static FORCEINLINE HRESULT IDXGISwapChainDWM_GetContainingOutput(IDXGISwapChainDWM* This, IDXGIOutput **ppOutput) {
		return This->lpVtbl->GetContainingOutput(This, ppOutput);
	}
	static FORCEINLINE HRESULT IDXGISwapChainDWM_GetFrameStatistics(IDXGISwapChainDWM* This, DXGI_FRAME_STATISTICS *pStats) {
		return This->lpVtbl->GetFrameStatistics(This, pStats);
	}
	static FORCEINLINE HRESULT IDXGISwapChainDWM_GetLastPresentCount(IDXGISwapChainDWM* This, UINT *pLastPresentCount) {
		return This->lpVtbl->GetLastPresentCount(This, pLastPresentCount);
	}
#endif
#endif

#endif

	HRESULT STDMETHODCALLTYPE IDXGISwapChainDWM_Present_Proxy(
		IDXGISwapChainDWM* This,
		UINT SyncInterval,
		UINT Flags);
	void __RPC_STUB IDXGISwapChainDWM_Present_Stub(
		IRpcStubBuffer* This,
		IRpcChannelBuffer* pRpcChannelBuffer,
		PRPC_MESSAGE pRpcMessage,
		DWORD* pdwStubPhase);
	HRESULT STDMETHODCALLTYPE IDXGISwapChainDWM_GetBuffer_Proxy(
		IDXGISwapChainDWM* This,
		UINT Buffer,
		REFIID riid,
		void **ppSurface);
	void __RPC_STUB IDXGISwapChainDWM_GetBuffer_Stub(
		IRpcStubBuffer* This,
		IRpcChannelBuffer* pRpcChannelBuffer,
		PRPC_MESSAGE pRpcMessage,
		DWORD* pdwStubPhase);
	HRESULT STDMETHODCALLTYPE IDXGISwapChainDWM_GetDesc_Proxy(
		IDXGISwapChainDWM* This,
		DXGI_SWAP_CHAIN_DESC *pDesc);
	void __RPC_STUB IDXGISwapChainDWM_GetDesc_Stub(
		IRpcStubBuffer* This,
		IRpcChannelBuffer* pRpcChannelBuffer,
		PRPC_MESSAGE pRpcMessage,
		DWORD* pdwStubPhase);
	HRESULT STDMETHODCALLTYPE IDXGISwapChainDWM_ResizeBuffers_Proxy(
		IDXGISwapChainDWM* This,
		UINT BufferCount,
		UINT Width,
		UINT Height,
		DXGI_FORMAT NewFormat,
		UINT SwapChainFlags);
	void __RPC_STUB IDXGISwapChainDWM_ResizeBuffers_Stub(
		IRpcStubBuffer* This,
		IRpcChannelBuffer* pRpcChannelBuffer,
		PRPC_MESSAGE pRpcMessage,
		DWORD* pdwStubPhase);
	HRESULT STDMETHODCALLTYPE IDXGISwapChainDWM_ResizeTarget_Proxy(
		IDXGISwapChainDWM* This,
		const DXGI_MODE_DESC *pNewTargetParameters);
	void __RPC_STUB IDXGISwapChainDWM_ResizeTarget_Stub(
		IRpcStubBuffer* This,
		IRpcChannelBuffer* pRpcChannelBuffer,
		PRPC_MESSAGE pRpcMessage,
		DWORD* pdwStubPhase);
	HRESULT STDMETHODCALLTYPE IDXGISwapChainDWM_GetContainingOutput_Proxy(
		IDXGISwapChainDWM* This,
		IDXGIOutput **ppOutput);
	void __RPC_STUB IDXGISwapChainDWM_GetContainingOutput_Stub(
		IRpcStubBuffer* This,
		IRpcChannelBuffer* pRpcChannelBuffer,
		PRPC_MESSAGE pRpcMessage,
		DWORD* pdwStubPhase);
	HRESULT STDMETHODCALLTYPE IDXGISwapChainDWM_GetFrameStatistics_Proxy(
		IDXGISwapChainDWM* This,
		DXGI_FRAME_STATISTICS *pStats);
	void __RPC_STUB IDXGISwapChainDWM_GetFrameStatistics_Stub(
		IRpcStubBuffer* This,
		IRpcChannelBuffer* pRpcChannelBuffer,
		PRPC_MESSAGE pRpcMessage,
		DWORD* pdwStubPhase);
	HRESULT STDMETHODCALLTYPE IDXGISwapChainDWM_GetLastPresentCount_Proxy(
		IDXGISwapChainDWM* This,
		UINT *pLastPresentCount);
	void __RPC_STUB IDXGISwapChainDWM_GetLastPresentCount_Stub(
		IRpcStubBuffer* This,
		IRpcChannelBuffer* pRpcChannelBuffer,
		PRPC_MESSAGE pRpcMessage,
		DWORD* pdwStubPhase);

#endif  /* __IDXGISwapChainDWM_INTERFACE_DEFINED__ */

	/*****************************************************************************
	* IDXGIFactoryDWM interface
	*/
#ifndef __IDXGIFactoryDWM_INTERFACE_DEFINED__
#define __IDXGIFactoryDWM_INTERFACE_DEFINED__

	DEFINE_GUID(IID_IDXGIFactoryDWM, 0x713f394e, 0x92ca, 0x47e7, 0xab, 0x81, 0x11, 0x59, 0xc2, 0x79, 0x1e, 0x54);
#if defined(__cplusplus) && !defined(CINTERFACE)
	MIDL_INTERFACE("713f394e-92ca-47e7-ab81-1159c2791e54")
		IDXGIFactoryDWM : public IUnknown
	{
		virtual HRESULT STDMETHODCALLTYPE CreateSwapChain(
			IUnknown *pDevice,
			DXGI_SWAP_CHAIN_DESC *pDesc,
			IDXGIOutput *pOutput,
			IDXGISwapChainDWM **ppSwapChainDWM) = 0;

	};
#ifdef __CRT_UUID_DECL
	__CRT_UUID_DECL(IDXGIFactoryDWM, 0x713f394e, 0x92ca, 0x47e7, 0xab, 0x81, 0x11, 0x59, 0xc2, 0x79, 0x1e, 0x54)
#endif
#else
	typedef struct IDXGIFactoryDWMVtbl {
		BEGIN_INTERFACE

			/*** IUnknown methods ***/
			HRESULT(STDMETHODCALLTYPE *QueryInterface)(
				IDXGIFactoryDWM* This,
				REFIID riid,
				void **ppvObject);

		ULONG(STDMETHODCALLTYPE *AddRef)(
			IDXGIFactoryDWM* This);

		ULONG(STDMETHODCALLTYPE *Release)(
			IDXGIFactoryDWM* This);

		/*** IDXGIFactoryDWM methods ***/
		HRESULT(STDMETHODCALLTYPE *CreateSwapChain)(
			IDXGIFactoryDWM* This,
			IUnknown *pDevice,
			DXGI_SWAP_CHAIN_DESC *pDesc,
			IDXGIOutput *pOutput,
			IDXGISwapChainDWM **ppSwapChainDWM);

		END_INTERFACE
	} IDXGIFactoryDWMVtbl;
	interface IDXGIFactoryDWM {
		CONST_VTBL IDXGIFactoryDWMVtbl* lpVtbl;
	};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
	/*** IUnknown methods ***/
#define IDXGIFactoryDWM_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IDXGIFactoryDWM_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IDXGIFactoryDWM_Release(This) (This)->lpVtbl->Release(This)
	/*** IDXGIFactoryDWM methods ***/
#define IDXGIFactoryDWM_CreateSwapChain(This,pDevice,pDesc,pOutput,ppSwapChainDWM) (This)->lpVtbl->CreateSwapChain(This,pDevice,pDesc,pOutput,ppSwapChainDWM)
#else
	/*** IUnknown methods ***/
	static FORCEINLINE HRESULT IDXGIFactoryDWM_QueryInterface(IDXGIFactoryDWM* This, REFIID riid, void **ppvObject) {
		return This->lpVtbl->QueryInterface(This, riid, ppvObject);
	}
	static FORCEINLINE ULONG IDXGIFactoryDWM_AddRef(IDXGIFactoryDWM* This) {
		return This->lpVtbl->AddRef(This);
	}
	static FORCEINLINE ULONG IDXGIFactoryDWM_Release(IDXGIFactoryDWM* This) {
		return This->lpVtbl->Release(This);
	}
	/*** IDXGIFactoryDWM methods ***/
	static FORCEINLINE HRESULT IDXGIFactoryDWM_CreateSwapChain(IDXGIFactoryDWM* This, IUnknown *pDevice, DXGI_SWAP_CHAIN_DESC *pDesc, IDXGIOutput *pOutput, IDXGISwapChainDWM **ppSwapChainDWM) {
		return This->lpVtbl->CreateSwapChain(This, pDevice, pDesc, pOutput, ppSwapChainDWM);
	}
#endif
#endif

#endif

	HRESULT STDMETHODCALLTYPE IDXGIFactoryDWM_CreateSwapChain_Proxy(
		IDXGIFactoryDWM* This,
		IUnknown *pDevice,
		DXGI_SWAP_CHAIN_DESC *pDesc,
		IDXGIOutput *pOutput,
		IDXGISwapChainDWM **ppSwapChainDWM);
	void __RPC_STUB IDXGIFactoryDWM_CreateSwapChain_Stub(
		IRpcStubBuffer* This,
		IRpcChannelBuffer* pRpcChannelBuffer,
		PRPC_MESSAGE pRpcMessage,
		DWORD* pdwStubPhase);

#endif  /* __IDXGIFactoryDWM_INTERFACE_DEFINED__ */

	/* Begin additional prototypes for all interfaces */


	/* End additional prototypes */

#ifdef __cplusplus
}
#endif
